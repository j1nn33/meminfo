---
########     CONTROL CONFIG FILE    ####

- debug:
    msg: 'CONTROL CONFIG FILE'

- name: Control NGINX config is exixist
  shell: ls -l /etc/nginx
  register: results
  failed_when: "'nginx.conf' not in results.stdout"

- name: Control ELASTICSEARCH config is exist
  shell: ls -l /etc/elasticsearch
  register: results
  failed_when: "'elasticsearch.yml' not in results.stdout"

- name: Control KIBANA config is exist
  shell: ls -l /etc/kibana
  register: results
  failed_when: "'kibana.yml' not in results.stdout"

- name: Control LOGATASH config is exist
  shell: ls -l /etc/logstash
  register: results
  failed_when: "'logstash.yml' not in results.stdout"

##########################################

# CONTROL APPLICATION 
- debug:
    msg: 'CONTROL APPLICATION'

########    JAVA       ##################

- name: Control JAVA verion 
  shell: java -version
  register: results
  failed_when: "'java version' not in results.stderr"
 
#####    ELASTICSEARCH    #############

- name: Control service ELASTICSEARCH is running
  shell: systemctl status elasticsearch.service
  register: results
  failed_when: "'Active: active (running)' not in results.stdout"

- name: Control ELASTICSEARCH PORT is open
  shell: netstat -tulnp | grep 9200
  register: results
  failed_when: "'127.0.0.1:9200' not in results.stdout"

- name: Control ELASTICSEARCH is work from localhost
  shell: curl -XGET -i http://localhost:9200
  register: results
  failed_when: "'HTTP/1.1 200 OK' not in results.stdout"

  #####   KIBANA    ##################

- name: Control service KIBANA is running
  shell: systemctl status kibana.service
  register: results
  failed_when: "'Active: active (running)' not in results.stdout"

- name: Control KIBANA PORT is open
  shell: netstat -tulnp | grep 5601
  register: results
  failed_when: "':5601' not in results.stdout"

  ######    NGINX      ###################

- name: Control service NGINX is running
  shell: systemctl status nginx.service
  register: results
  failed_when: "'Active: active (running)' not in results.stdout"

- name: Control site is work from localhost
  shell: curl -XGET -i http://localhost/
  register: results
  failed_when: "'HTTP/1.1 401 Unauthorized' not in results.stdout"
  
  ######    LOGSTASH      ###################
  
- name: Control service LOGSTASH is running
  shell: systemctl status logstash.service
  register: results
  failed_when: "'Active: active (running)' not in results.stdout"

   ######    CLUSTER HEALTH    ##############
   
- name: Control CLUSTER HEALTH RED
  shell: curl -XGET 'http://localhost:9200/_cluster/health?pretty' | grep status
  register: results
  failed_when: "'red' in results.stdout"
  
#- debug:
#    var: results



#   ######     CONTROL WORK ELASTICSEARCH  ###

- name: Copy scrip 'test_elastic_index.sh'
  copy:
    src: test_elastic_index.sh
    dest: /root/test_elastic_index.sh
    mode: u+rwx,g+rwx,o+rwx
    

- name: Create test index 'app-test'
  shell: sh test_elastic_index.sh | grep successful
  register: results
  failed_when: "'1' not in results.stdout"
  
- name: Sleep for 5 seconds and continue with play
  wait_for:
    timeout: 5
  delegate_to: localhost
  
- name: Contol index 'app-test' is exist
  shell: curl 'http://localhost:9200/_cat/indices?v' | grep app-test
  register: results
  failed_when: "'app-test' not in results.stdout"
  
- name: Contol search 'field is exist'
  shell: curl -XGET "http://localhost:9200/app-test/_search?q=name:test" | grep  name | tail -c20
  register: results
  failed_when: "'test-user' not in results.stdout" 
    
- name: Contol search 'field is not exist'
  shell: curl -XGET "http://localhost:9200/app-test/_search?q=name:test1" | grep name | tail -c20
  register: results
  failed_when: "'test-user' in results.stdout" 
 
- name: Delete tets index 'app-test'
  shell: curl -XDELETE 'http://localhost:9200/app-test?pretty'
  register: results
  failed_when: "'true' not in results.stdout"
  
- name: Contol index 'app-test' is not exist
  shell: curl 'http://localhost:9200/_cat/indices?v' | grep app-test
  register: results
  failed_when: "'app-test' in results.stdout"

  
#- debug:
#    var: results