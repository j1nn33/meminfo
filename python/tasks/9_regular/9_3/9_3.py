"""
Создать функцию parse_cfg, которая ожидает как аргумент имя файла, в котором находится конфигурация устройства.
Функция должна обрабатывать конфигурацию и возвращать IP-адреса и маски,которые настроены на интерфейсах, в виде списка кортежей:
первый элемент кортежа - IP-адрес
второй элемент кортежа - маска
Например (взяты произвольные адреса): [('10.0.1.1', '255.255.255.0'), ('10.0.2.1', '255.255.255.0')]

Для получения такого результата, используйте регулярные выражения.
Проверить работу функции на примере файла config_r1.txt.
Обратите внимание, что в данном случае, мы можем не проверять корректность IP-
адреса, диапазоны адресов и так далее, так как мы обрабатываем конфигурацию, а не ввод пользователя.
"""

import re


def regular(info_list):
    result = []
    tuple_temp = ()
    #print('\n'.join(info_list))
    print('#######################')
    for x in info_list:                           # проходим посторчно список, полученный из файла
        match = re.search('(?P<ip>\d+.\d+.\d+.\d+)\s(?P<mask>\d+.\d+.\d+.\d+)', x)
        if match:
            #print (match.group('ip'),' ',match.group('mask'))
            tuple_temp = ()
            tuple_temp = (match.group('ip'),match.group('mask'))
            result.append(tuple_temp)
    return result


################################################################################################


def read_file(file_name):                         # открытие файла
    temp_list=[]    
    try:                                          # обработка исключения на наличие файла
        with open(file_name, 'r') as f:
            for line in f:
               temp_list.append(line.rstrip())    # исключиние дополнитеьлного символа перевода строки и заполнение вспомогательного списка
    except IOError:
        print('---FUNCTION---No such file')
    return temp_list

#################################################################################################
if __name__ == '__main__':
    result = []
    info_list = (read_file('/home/ubuntu/workspace/python/tasks/9_regular/9_3/config_r1.txt'))
    result = regular(info_list)
    print (result)
    #print('\n'.join(result))