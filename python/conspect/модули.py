модуль - любой файл с расширением .py
import - выполняет загрузку другого файла и обеспечивает доступ к его содержимому
содержимое становиться доступным внешнему миру через его атрибуты
""" ПРИМЕР
# cat myfile.py       -  содержимое файла myfile.py
title = "The Meaning of Life"
"""
- доступ к атрибуту title
1 способ
import myfile               # получение доступа к атрибутам модуля
print (myfile.title)        # object.attribute
# The Meaning of Life

2 способ  

from myfile import title    # получение копии имени из модуля 
print (title)
# The Meaning of Life

##############################
Создание своего модуля в Python:
    
##############################    
Чтобы создать свой модуль в Python достаточно сохранить ваш скрипт с расширением .py 
Теперь он доступен в любом другом файле. Например, создадим два файла: 
module_1.py и module_2.py и сохраним их в одной директории. В первом запишем:

##################module_1.py
def hello():
    print ("Hello from module_1")
    return
if __name__ == '__main__':
    main()

    
#А во втором вызовем эту функцию:
###################module_2.py
from module_1 import hello
 
hello()

# Hello from module_1

##############################
#
#Пакеты модулей в Python:
#Отдельные файлы-модули с кодом на Python могут объединяться в пакеты модулей. 
#Пакет это директория (папка), содержащая несколько отдельных файлов-скриптов. 
#Например, имеем следующую структуру:


|_ my_file.py
|_ my_package
         |_ __init__.py
         |_ inside_file.py
         
         
#В файле inside_file.py определена некая функция foo. 
#Тогда чтобы получить доступ к функции foo, в файле my_file следует выполнить следующий код:
from my_package.inside_file import foo

#Так же обратите внимание на наличие внутри 
#директории my_package файла __init__.py. Э
#то может быть пустой файл, который сообщает Python, 
#что данная директория является пакетом модулей. 
#В Python 3.3 и выше включать файл __init__.py в пакет модулей стало необязательно,
#однако, рекомендуется делать это ради поддержки обратной совместимости.